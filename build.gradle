buildscript {
  configurations.classpath {
    resolutionStrategy.activateDependencyLocking()
  }
}

plugins {
  id 'codenarc'
  id 'groovy'
  id 'jacoco'
  id 'java-gradle-plugin'

  id 'com.gradle.plugin-publish' version '1.0.0-rc-2'
}

version = '1.6.2'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(GroovyCompile) {
  groovyOptions.encoding = 'UTF-8'
}

dependencyLocking {
  lockAllConfigurations()
}

codenarc {
  reportFormat('console')
  toolVersion('3.0.1')
}

jacoco {
  toolVersion('0.8.8')
}

repositories {
  mavenCentral()
}

dependencies {
  implementation(localGroovy())

  testImplementation(gradleTestKit())
  testRuntimeOnly('net.bytebuddy:byte-buddy:1.12.10')
  testRuntimeOnly('org.objenesis:objenesis:3.2')
}

gradlePlugin {
  plugins {
    prettyJupiter {
      id = 'com.github.joselion.pretty-jupiter'
      implementationClass = 'com.github.joselion.prettyjupiter.PrettyJupiterPlugin'
      displayName = 'Pretty Jupiter Plugin'
      description = 'Gradle plugin to log JUnit Jupiter tests with a pretty Mocha.js style'
    }
  }
}

pluginBundle {
  website = 'https://github.com/JoseLion/pretty-jupiter'
  vcsUrl = 'https://github.com/JoseLion/pretty-jupiter.git'
  tags = ['junit', 'jupiter', 'logger', 'pretty', 'mocha']
}

testing {
  suites {
    test {
      useSpock('2.2-M1-groovy-3.0')
    }

    e2e(JvmTestSuite) {
      useSpock('2.2-M1-groovy-3.0')

      dependencies {
        implementation(project)
      }

      sources {
        groovy {
          srcDirs = ['src/2e2/groovy']
        }
      }
    }
  }
}

test {
  testLogging {
    showStandardStreams(false)
    events('passed', 'skipped', 'failed')
  }
}

e2e {
  testLogging {
    showStandardStreams(false)
    events('passed', 'skipped', 'failed')
  }
}

tasks.named('check') {
  dependsOn(testing.suites.e2e)
}

jacocoTestReport {
  dependsOn(test, e2e)

  reports {
    html.required = true
    xml.required = true
  }
}
