plugins {
  id 'codenarc'
  id 'groovy'
  id 'jacoco'
  id 'java-gradle-plugin'

  id 'com.gradle.plugin-publish' version '0.11.0'
  id 'nebula.lint' version '16.2.3'
}

version = '1.3.0'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencyLocking {
  lockAllConfigurations()
}

codenarc {
  reportFormat('console')
  toolVersion('1.5')
}

gradleLint {
  alwaysRun = false

  rules += [
    'all-dependency',
    'all-nebula-renames',
    'archaic-wrapper',
    'duplicate-dependency-class'
  ]
}

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  testImplementation(group: 'org.codehaus.groovy', name: 'groovy', version: '3.0.3', ext: 'pom')
  testImplementation(group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5')
  testRuntimeOnly(group: 'net.bytebuddy', name: 'byte-buddy', version: '1.10.8')
  testRuntimeOnly(group: 'org.objenesis', name: 'objenesis', version: '3.1')
}

pluginBundle {
  website = 'https://github.com/JoseLion/pretty-jupiter'
  vcsUrl = 'https://github.com/JoseLion/pretty-jupiter.git'
  tags = ['junit', 'jupiter', 'logger', 'pretty', 'mocha']
}

gradlePlugin {
  plugins {
    prettyJupiter {
      id = 'com.github.joselion.pretty-jupiter'
      implementationClass = 'com.github.joselion.prettyjupiter.PrettyJupiterPlugin'
      displayName = 'Pretty Jupiter Plugin'
      description = 'Gradle plugin to log JUnit Jupiter tests with a pretty Mocha.js style'
    }
  }
}

test {
  testLogging {
    showStandardStreams = true
    events('passed', 'skipped', 'failed')
  }
}

jacocoTestReport {
  reports {
    html.enabled(true)
    xml.enabled(true)
  }
}
