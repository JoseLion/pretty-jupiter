buildscript {
  configurations.classpath {
    resolutionStrategy.activateDependencyLocking()
  }
}

plugins {
  id 'codenarc'
  id 'groovy'
  id 'jacoco'
  id 'java-gradle-plugin'

  id 'com.gradle.plugin-publish' version '0.13.0'
}

version = '1.3.3'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencyLocking {
  lockAllConfigurations()
}

codenarc {
  reportFormat('console')
  toolVersion('2.0.0')
}

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  testImplementation('org.spockframework:spock-core:1.3-groovy-2.5')

  testRuntimeOnly('net.bytebuddy:byte-buddy:1.10.22')
  testRuntimeOnly('org.objenesis:objenesis:3.2')
}

pluginBundle {
  website = 'https://github.com/JoseLion/pretty-jupiter'
  vcsUrl = 'https://github.com/JoseLion/pretty-jupiter.git'
  tags = ['junit', 'jupiter', 'logger', 'pretty', 'mocha']
}

gradlePlugin {
  plugins {
    prettyJupiter {
      id = 'com.github.joselion.pretty-jupiter'
      implementationClass = 'com.github.joselion.prettyjupiter.PrettyJupiterPlugin'
      displayName = 'Pretty Jupiter Plugin'
      description = 'Gradle plugin to log JUnit Jupiter tests with a pretty Mocha.js style'
    }
  }
}

sourceSets {
  e2e {
  }
}

gradlePlugin.testSourceSets(sourceSets.e2e)
configurations.e2eImplementation.extendsFrom(configurations.testImplementation)

tasks.register('e2e', Test) {
  testClassesDirs = sourceSets.e2e.output.classesDirs
  classpath = sourceSets.e2e.runtimeClasspath
}

tasks.named('check') {
  finalizedBy(tasks.e2e)
}

test {
  testLogging {
    showStandardStreams = true
    events('passed', 'skipped', 'failed')
  }
}

jacocoTestReport {
  reports {
    html.enabled(true)
    xml.enabled(true)
  }
}
