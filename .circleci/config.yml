version: 2.1

executors:
  default:
    working_directory: ~/repo/pretty-jupiter
    docker:
      - image: cimg/base:stable
        environment:
          JVM_OPTS: -Xmx4096m
          TERM: dumb
    resource_class: large

commands:
  install-jdk:
    description: Install and setup the JDK environmnet
    parameters:
      major:
        description: The JDK major version to use
        type: string
        default: "17"
      version:
        description: The JDK full version to use
        type: string
        default: "17.0.3"

    steps:
      - run:
          name: Get JDK SHA256
          command: |
            mkdir ~/jdk
            wget "https://download.oracle.com/java/<<parameters.major>>/archive/jdk-<<parameters.version>>_linux-x64_bin.tar.gz.sha256" -O ~/jdk/jdk-<<parameters.major>>.sha256
      - restore_cache:
          key: v1-<<parameters.major>>-{{ checksum "~/jdk/jdk-<<parameters.major>>.sha256" }}

      - run:
          name: Download JDK
          command: |
            if [ ! -f ~/jdk/jdk-<<parameters.major>>.tar.gz ]; then
              wget -nc https://download.oracle.com/java/<<parameters.major>>/archive/jdk-<<parameters.version>>_linux-x64_bin.tar.gz -O ~/jdk/jdk-<<parameters.major>>.tar.gz
            fi
      - run:
          name: Install JDK
          command: |
            sudo tar xvf ~/jdk/jdk-<<parameters.major>>.tar.gz -C ~/jdk/
            sudo mkdir /opt/jdk-<<parameters.major>>
            sudo mv ~/jdk/jdk-<<parameters.major>>*/* /opt/jdk-<<parameters.major>>
            echo 'export JAVA_HOME=/opt/jdk-<<parameters.major>>' >> $BASH_ENV
            echo 'export PATH=$PATH:$JAVA_HOME/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Check Java version
          command: |
            echo $JAVA_HOME
            java --version
      - save_cache:
          paths:
            - ~/jdk/jdk-<<parameters.major>>.tar.gz
          key: v1-<<parameters.major>>-{{ checksum "~/jdk/jdk-<<parameters.major>>.sha256" }}

  setup:
    description: "Setup the environment to run tasks on CI"

    steps:
      - checkout:
          path: ~/repo/pretty-jupiter

      - run:
          name: Provisioning
          command: |
            sed -i "s/{GRADLE_PUBLISH_KEY}/$GRADLE_PUBLISH_KEY/g" gradle.properties
            sed -i "s/{GRADLE_PUBLISH_SECRET}/$GRADLE_PUBLISH_SECRET/g" gradle.properties

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "buildscript-gradle.lockfile" }}-{{ checksum "gradle.lockfile" }}
            - v2-dependencies-{{ checksum "buildscript-gradle.lockfile" }}-
            - v2-dependencies-

      - run:
          name: Dependencies
          command: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/repo/pretty-jupiter/.gradle
            - ~/.gradle
          key: v2-dependencies-{{ checksum "buildscript-gradle.lockfile" }}-{{ checksum "gradle.lockfile" }}

jobs:
  build:
    executor: default

    steps:
      - install-jdk

      - setup

      - run:
          name: Compile
          command: ./gradlew compileGroovy compileTestGroovy compileE2eGroovy

      - run:
          name: Lint
          command: ./gradlew codenarcMain codenarcTest codenarcE2e

      - run:
          name: Test
          command: ./gradlew test

      - run:
          name: End-to-end
          command: ./gradlew e2e

      - run:
          name: Build
          command: ./gradlew build

      - run:
          name: Generate reports
          command: ./gradlew jacocoTestReport

      - run:
          name: Upload reports
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            ./codecov -Z -t ${CODECOV_TOKEN}

  publish:
    executor: default

    steps:
      - install-jdk

      - setup

      - run:
          name: Assemble
          command: ./gradlew assemble

      - run:
          name: Publish
          command: ./gradlew publishPlugins

workflows:
  main:
    jobs:
      - build

      - publish:
          requires:
            - build
          filters:
            branches:
              only: release
